@{
    ViewData["Title"] = "Matrix test";
}


    <div class="row text-center">
        <h2>Отчет</h2>
    </div">
    <div class="row border-bottom" id="query-form">
        <div class="col text-center"><h3>Укажите интервал времени для формирования отчета:</h3></div>     
        <div class="col">
            <label >С<input type="datetime-local" id="start-datetime"  value="@Model.start_dt.ToString("yyyy-MM-ddThh:mm")" /></label>
            <label>по<input type="datetime-local" id="finish-datetime" value="@Model.finish_dt.ToString("yyyy-MM-ddThh:mm")" /></label>
        </div>
        
        <div class="col border-bottom">
            <button type="button" class="btn btn-primary" id="query-btn">Получить отчет</button>
        </div>
    </div>
    <div class="row">
         <div class="col" id="error-interval">
            <div  class="alert alert-danger">Указаны не корректные значения интервала времени!!!</div>
        </div>
        <div class="col" id="error-query" >
            <div  class="alert alert-warning">Произошла ошибка при выполнении запроса!</div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th class="text-center">№</th>
                        <th class="text-center">Зона</th>
                        <th class="text-center">Кол-во брикетов</th>
                    </tr>
                </thead>
                <tbody id="report-data">           
                </tbody>
            </table>
        </div>  
    </div>  


    <script type="text/javascript">

        $(document).ready(function () {            

            $("#error-interval").add("#error-query")
                .hide();

            $("#query-btn").click(function () {
                const $btn = $(this);
                const start = $("#start-datetime").val();
                const finish = $("#finish-datetime").val();

                if (validateInterval(start, finish)) {
                    $("#error-interval").hide();
                } else {
                    $("#error-interval").show();
                    return;
                }

                $("#error-query").hide();

                $btn.prop("disabled", true);

                const dt = {
                    Start:start,
                    Finish:finish 
                };

                $.getJSON("@Url.Action("GetReport")",dt, function (data) {
                    const $table = $("#report-data");

                    $table.empty();
                    data.zones.forEach(z => {
                        const $tr = $("<tr/>");                                             

                        $tr.append($("<td/>").text(z.num).addClass("text-center"))
                            .append($("<td/>").text(z.zone_name).addClass("text-left"))
                            .append($("<td/>").text(z.briketCount).addClass("text-right"));

                        $table.append($tr);
                    });                      

                })
                .fail(function () {
                        $("#error-query").show();
                }) 
                .always(function () {
                        $btn.prop("disabled", false);
                });
            });
        });

        function validateInterval(start, finish) {
            try {
                const dt1 = new Date(start);
                const dt2 = new Date(finish);

                return dt1 < dt2;

            }
            catch{                 

            }

            return false;
        }

    </script>



